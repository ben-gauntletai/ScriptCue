rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to read and write to their own practice videos
    match /practice-videos/{userId}/{scriptId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write to their own script uploads
    match /scripts/{userId}/upload/{fileName} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 10 * 1024 * 1024 // 10MB max
        && request.resource.contentType.matches('application/pdf')
        && (
          request.resource.metadata == null ||
          (
            request.resource.metadata.uploadedBy == request.auth.uid &&
            request.resource.metadata.scriptId is string
          )
        );
    }

    // Allow access to processed scripts
    match /scripts/{scriptId}/processed/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && request.resource.size < 10 * 1024 * 1024
        && request.resource.contentType.matches('application/pdf');
    }

    // Allow access to voice lines in new structure
    match /scripts/{scriptId}/analysis/{characterName}/voices/{voiceName}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && request.resource.size < 5 * 1024 * 1024 // 5MB max
        && request.resource.contentType.matches('audio/mpeg')
        && request.resource.metadata.scriptId is string;
    }
  }
} 